def mcVersion = "1.12.2"
def versionMajor = 1
def versionMinor = 0
def versionRev = 0

buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven-publish'

def versionBuild = 0
if (System.getenv("BUILD_NUMBER") != null)
    versionBuild = System.getenv("BUILD_NUMBER")

version = "${mcVersion}-${versionMajor}.${versionMinor}.${versionRev}.${versionBuild}"
group = "net.rom.libs" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ReadOnlyCore"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

task javadocJar(type: Jar, dependsOn: 'javadoc') {
    from javadoc.destinationDir
    classifier "javadoc"
}

task srcJar(type: Jar, dependsOn: "sourceMainJava") {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
	archives srcJar
	archives javadocJar
}

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"
    replace '${version}', project.version
    mappings = "snapshot_20171003"
}

allprojects {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

dependencies {

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

publishing {
    publications {
        all(MavenPublication) {
            artifact jar
            artifact javadocJar
            artifact srcJar
            artifactId = archivesBaseName
        }
    }
 	repositories {
        mavenLocal()
    }
}
